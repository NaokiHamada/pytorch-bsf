Search.setIndex({"docnames": ["faq", "index", "modules", "quickstart", "torch_bsf", "whatis"], "filenames": ["faq.rst", "index.rst", "modules.rst", "quickstart.rst", "torch_bsf.rst", "whatis.rst"], "titles": ["Frequently asked questions", "Welcome to PyTorch-BSF!", "torch_bsf", "Quickstart", "torch_bsf package", "What is Bezier simplex fitting?"], "terms": {"tba": 0, "import": [0, 3, 4, 5], "differ": 0, "between": [0, 5], "pytorch": [0, 3, 4, 5], "bsf": [0, 3, 5], "first": [0, 3], "domain": 0, "bezier": [0, 1, 3, 4], "simplex": [0, 1, 3, 4], "i": [0, 1, 3, 4], "bound": 0, "wherea": 0, "assum": [0, 3, 5], "non": 0, "euclidean": [0, 5], "space": [0, 5], "thu": 0, "can": [0, 3, 5], "repres": [0, 5], "compact": 0, "subspac": 0, "ambient": 0, "second": 0, "task": 0, "ha": 0, "strong": 0, "limit": 0, "its": 0, "onli": 0, "optimiz": 0, "type": [0, 3, 4], "coeffici": [0, 4], "object": [0, 5], "function": [0, 5], "howev": 0, "thi": [0, 3, 5], "offer": 0, "great": [0, 5], "advantag": 0, "speed": 0, "while": 0, "black": 0, "box": 0, "algorithm": [0, 5], "us": [0, 3, 4], "properti": [0, 4], "take": 0, "As": [0, 5], "fit": [0, 1, 2, 3, 4], "requir": 0, "fewer": 0, "solut": 0, "entir": [0, 5], "pareto": [0, 5], "set": [0, 5], "front": [0, 5], "which": [0, 5], "suitabl": 0, "And": 0, "also": [0, 3], "find": [0, 5], "quit": 0, "ubiquit": 0, "In": [0, 3], "design": [0, 5], "softwar": 0, "trade": 0, "off": 0, "gener": [0, 4, 5], "effici": 0, "No": 0, "The": [0, 1, 3, 4, 5], "theorem": 0, "sai": 0, "noth": 0, "about": 0, "accuraci": 0, "fix": 0, "degre": [0, 2, 3, 4, 5], "after": [0, 3], "need": 0, "check": 0, "good": [0, 5], "your": 0, "knowledg": 0, "Not": 0, "possibli": 0, "ye": 0, "believ": 0, "simplic": [0, 5], "aris": [0, 5], "everywher": 0, "we": [0, 5], "high": [0, 5], "dimension": [0, 5], "shape": [0, 4, 5], "represent": 0, "If": [0, 3, 4, 5], "new": 0, "pleas": 0, "let": [0, 3, 5], "me": 0, "know": 0, "document": 0, "section": 0, "implement": [1, 4], "ftting": 1, "project": 1, "github": [1, 3], "quickstart": 1, "run": 1, "an": [1, 5], "mlflow": 1, "python": 1, "packag": [1, 2], "code": 1, "what": 1, "dataset": 1, "why": 1, "doe": 1, "matter": 1, "applic": [1, 3], "1": [1, 3, 4], "elast": 1, "net": 1, "2": [1, 3, 4], "deep": 1, "neural": 1, "network": 1, "frequent": 1, "ask": 1, "question": 1, "There": [1, 3, 5], "ar": [1, 3, 4, 5], "too": 1, "mani": 1, "tool": 1, "hyperparamet": [1, 5], "search": [1, 5], "ml": 1, "do": 1, "you": [1, 3], "propos": 1, "yet": 1, "anoth": 1, "one": 1, "approxim": 1, "result": [1, 3], "alwai": 1, "reliabl": 1, "ani": [1, 4, 5], "other": 1, "than": 1, "multiobject": [1, 5], "optim": [1, 4, 5], "torch_bsf": [1, 3], "index": [1, 4, 5], "modul": [1, 2, 3], "page": [1, 5], "submodul": 2, "bezier_simplex": 2, "beziersimplex": [2, 4], "configure_optim": [2, 4], "forward": [2, 4], "meshgrid": [2, 4], "test_step": [2, 4], "training_step": [2, 4], "validation_end": [2, 4], "validation_step": [2, 4], "beziersimplexdatamodul": [2, 4], "setup": [2, 4], "test_dataload": [2, 4], "train_dataload": [2, 4], "val_dataload": [2, 4], "indic": [], "monomi": [2, 4], "polynom": [2, 4], "content": [2, 3], "sever": 3, "wai": 3, "have": [3, 5], "data": [3, 4, 5], "label": [3, 4], "common": 3, "file": [3, 4], "format": 3, "csv": 3, "json": 3, "etc": 3, "easiest": 3, "invok": 3, "via": 3, "some": 3, "cui": 3, "command": 3, "provid": [3, 5], "without": 3, "On": 3, "each": [3, 4], "separ": 3, "runtim": 3, "environ": 3, "automat": 3, "handl": 3, "miniconda": 3, "Then": 3, "conda": 3, "from": [3, 4, 5], "forg": 3, "channel": 3, "c": 3, "": [3, 5], "prepar": [3, 4], "cat": 3, "eo": 3, "train_data": 3, "tsv": 3, "4": [3, 5], "3": [3, 4, 5], "5": [3, 4], "6": 3, "train_label": 3, "must": 3, "same": 3, "number": [3, 4], "line": 3, "now": 3, "those": [3, 5], "latest": 3, "version": 3, "http": [3, 5], "com": 3, "rafcc": 3, "p": [3, 5], "finish": 3, "get": 3, "model": [3, 4], "mlrun": 3, "directori": 3, "uri": 3, "pwd": 3, "0": [3, 4, 5], "run_uuid": 3, "artifact": 3, "input": 3, "path": [3, 4], "test_data": 3, "output": [3, 4], "test_label": 3, "web": 3, "full": 3, "host": 3, "localhost": 3, "port": 3, "5001": 3, "request": 3, "post": 3, "method": [3, 4], "curl": 3, "invoc": 3, "h": 3, "d": [3, 4, 5], "column": 3, "t1": 3, "t2": 3, "t3": 3, "7": 3, "see": [3, 5], "detail": [3, 5], "www": 3, "org": [3, 5], "doc": 3, "html": 3, "deploi": 3, "8": [3, 4], "abov": 3, "pip": 3, "m": [3, 4, 5], "call": [3, 5], "torch": [3, 4], "t": [3, 4, 5], "tensor": [3, 4], "paramet": [3, 4, 5], "x": [3, 4, 5], "valu": [3, 4], "correspond": [3, 4], "b": [3, 4, 5], "param": [3, 4], "max_epoch": [3, 4], "100": [3, 4], "print": [3, 4], "f": [3, 4, 5], "class": [4, 5], "n_param": [2, 4], "int": 4, "n_valu": [2, 4], "sourc": 4, "base": 4, "lightningmodul": 4, "A": [4, 5], "exampl": 4, "dl": 4, "dataload": 4, "tensordataset": 4, "trainer": 4, "pl": 4, "callback": 4, "earlystop": 4, "monitor": 4, "val_ms": [], "process": 4, "step": 4, "train": 4, "minibatch": 4, "vector": [4, 5], "mathbf": [4, 5], "return": 4, "num": 4, "tupl": 4, "comput": [4, 5], "grid": 4, "point": [4, 5], "edg": 4, "matrix": 4, "mesh": 4, "batch": 4, "batch_idx": 4, "dict": 4, "str": 4, "header": 4, "delimit": 4, "none": 4, "batch_siz": 4, "split_ratio": 4, "float": 4, "normal": 4, "lightningdatamodul": 4, "size": 4, "ratio": 4, "val": 4, "split": 4, "either": 4, "max": 4, "std": 4, "quantil": 4, "stage": 4, "acceler": 4, "devic": 4, "list": 4, "num_nod": 4, "strategi": 4, "epoch": 4, "stop": 4, "node": 4, "distribut": 4, "predict": 4, "dim": [], "deg": [], "iter": 4, "control": [4, 5], "arrai": [], "length": [], "var": [], "t_1": [4, 5], "d_1": [4, 5], "t_2": [4, 5], "d_2": [4, 5], "cdot": [4, 5], "t_m": [4, 5], "power": 4, "polynomi": [4, 5], "inom": [], "rac": [], "d_m": [4, 5], "curv": 5, "triangl": 5, "familiar": 5, "graphic": 5, "aid": 5, "1d": 5, "2d": 5, "instanc": 5, "success": 5, "field": 5, "dimens": [4, 5], "excel": 5, "flexibl": 5, "variou": 5, "arbitrari": 5, "introduc": 5, "basic": 5, "along": 5, "illustr": 5, "n": 5, "nonneg": 5, "integ": 5, "mathbb": 5, "includ": 5, "zero": [2, 4, 5], "r": 5, "defin": 5, "n_d": 5, "left": 5, "ldot": 5, "bigg": 5, "sum_": 5, "right": 5, "delta": 5, "mid": 5, "binom": [4, 5], "p_": 5, "where": 5, "finit": 5, "subset": 5, "time": 5, "want": 5, "try": 5, "formul": 5, "best": 5, "_": 5, "minim": 5, "least": 5, "squar": 5, "error": 5, "arg": 5, "min_": 5, "solv": 5, "l": 5, "bfg": 5, "more": 5, "precis": [4, 5], "few": 5, "continu": 5, "follow": 5, "hold": 5, "technic": 5, "Such": 5, "phi": 5, "e": [4, 5], "g": 5, "exist": 5, "send": 5, "subsimplex": 5, "subproblem": 5, "hyper": 5, "all": 5, "unconstrain": 5, "w": 5, "min_x": 5, "w_m": 5, "f_m": 5, "circ": 5, "surject": 5, "loss": 5, "l_d": 5, "mathrm": 5, "bcr": 5, "lambda_": 5, "real": 5, "l_": 5, "fake": 5, "z": 5, "zcr": 5, "di": 5, "l_g": 5, "gen": 5, "when": 5, "unknown": 5, "kobayashi": 5, "k": 5, "hamada": 5, "sannai": 5, "tanaka": 5, "bannai": 5, "sugiyama": 5, "2019": 5, "b\u00e9zier": 5, "describ": 5, "small": 5, "sampl": 5, "multi": 5, "proceed": 5, "aaai": 5, "confer": 5, "artifici": 5, "intellig": 5, "33": 5, "01": 5, "2304": 5, "2313": 5, "doi": 5, "10": 5, "1609": 5, "v33i01": 5, "33012304": 5, "2020": 5, "asymptot": 5, "risk": 5, "34": 5, "03": 5, "2416": 5, "2424": 5, "v34i03": 5, "5622": 5, "mizota": 5, "y": 5, "ichiki": 5, "2021": 5, "arxiv": 5, "2106": 5, "12704": 5, "math": 5, "oc": 5, "ab": 5, "goto": 5, "2018": 5, "driven": 5, "analysi": 5, "topologi": 5, "genet": 5, "evolutionari": 5, "657": 5, "664": 5, "1145": 5, "3205455": 5, "3205613": 5, "auto": 4, "32": 4, "true": 4, "frac": 4, "load": [2, 4], "rand": [2, 4], "randn": [2, 4], "save": [2, 4], "validate_control_point": [2, 4], "control_point": 4, "controlpoint": 4, "train_ms": 4, "enable_progress_bar": 4, "fals": 4, "target": 4, "init": 4, "skeleton": 4, "sequenc": 4, "bool": 4, "initi": 4, "guess": 4, "whether": 4, "enabl": 4, "progress": 4, "bar": 4, "9600": 4, "9100": 4, "7500": 4, "grad_fn": 4, "addbackward0": 4, "variabl": 4, "random": 4, "uniformli": 4, "rais": 4, "valueerror": 4, "neg": 4, "contain": 4, "floattensor": 4, "mean": 4, "standard": 4, "deviat": 4, "origin": 4, "fill": 4}, "objects": {"": [[4, 0, 0, "-", "torch_bsf"]], "torch_bsf": [[4, 1, 1, "", "BezierSimplex"], [4, 1, 1, "", "BezierSimplexDataModule"], [4, 0, 0, "-", "bezier_simplex"], [4, 4, 1, "", "fit"]], "torch_bsf.BezierSimplex": [[4, 2, 1, "", "configure_optimizers"], [4, 3, 1, "", "degree"], [4, 2, 1, "", "forward"], [4, 2, 1, "", "meshgrid"], [4, 3, 1, "", "n_params"], [4, 3, 1, "", "n_values"], [4, 2, 1, "", "test_step"], [4, 2, 1, "", "training_step"], [4, 2, 1, "", "validation_end"], [4, 2, 1, "", "validation_step"]], "torch_bsf.BezierSimplexDataModule": [[4, 2, 1, "", "setup"], [4, 2, 1, "", "test_dataloader"], [4, 2, 1, "", "train_dataloader"], [4, 2, 1, "", "val_dataloader"]], "torch_bsf.bezier_simplex": [[4, 1, 1, "", "BezierSimplex"], [4, 1, 1, "", "BezierSimplexDataModule"], [4, 4, 1, "", "fit"], [4, 4, 1, "", "load"], [4, 4, 1, "", "monomial"], [4, 4, 1, "", "polynom"], [4, 4, 1, "", "rand"], [4, 4, 1, "", "randn"], [4, 4, 1, "", "save"], [4, 4, 1, "", "validate_control_points"], [4, 4, 1, "", "zeros"]], "torch_bsf.bezier_simplex.BezierSimplex": [[4, 2, 1, "", "configure_optimizers"], [4, 3, 1, "", "degree"], [4, 2, 1, "", "forward"], [4, 2, 1, "", "meshgrid"], [4, 3, 1, "", "n_params"], [4, 3, 1, "", "n_values"], [4, 2, 1, "", "test_step"], [4, 2, 1, "", "training_step"], [4, 2, 1, "", "validation_end"], [4, 2, 1, "", "validation_step"]], "torch_bsf.bezier_simplex.BezierSimplexDataModule": [[4, 2, 1, "", "setup"], [4, 2, 1, "", "test_dataloader"], [4, 2, 1, "", "train_dataloader"], [4, 2, 1, "", "val_dataloader"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"frequent": 0, "ask": 0, "question": 0, "There": 0, "ar": 0, "too": 0, "mani": 0, "tool": 0, "hyperparamet": 0, "search": 0, "ml": 0, "why": [0, 5], "do": 0, "you": 0, "propos": 0, "yet": 0, "anoth": 0, "one": 0, "approxim": [0, 5], "result": 0, "alwai": 0, "reliabl": 0, "ani": 0, "applic": [0, 5], "other": 0, "than": 0, "multiobject": 0, "optim": 0, "welcom": 1, "pytorch": 1, "bsf": 1, "user": 1, "guid": 1, "api": [1, 3], "refer": [1, 5], "indic": 1, "tabl": 1, "torch_bsf": [2, 4], "quickstart": 3, "run": 3, "an": 3, "mlflow": 3, "project": 3, "instal": 3, "train": 3, "predict": 3, "serv": 3, "python": 3, "packag": [3, 4], "code": 3, "submodul": 4, "bezier_simplex": 4, "modul": 4, "content": 4, "what": 5, "i": 5, "bezier": 5, "simplex": 5, "fit": 5, "dataset": 5, "doe": 5, "matter": 5, "theorem": 5, "weakli": 5, "simplici": 5, "problem": 5, "1": 5, "elast": 5, "net": 5, "strongli": 5, "convex": 5, "weight": 5, "sum": 5, "scalar": 5, "solut": 5, "map": 5, "2": 5, "deep": 5, "neural": 5, "network": 5, "statist": 5, "test": 5}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Frequently asked questions": [[0, "frequently-asked-questions"]], "There are too many tools for hyperparameter search of ML. Why do you propose yet another one?": [[0, "there-are-too-many-tools-for-hyperparameter-search-of-ml-why-do-you-propose-yet-another-one"]], "Are approximation results always reliable?": [[0, "are-approximation-results-always-reliable"]], "Are there any applications other than multiobjective optimization?": [[0, "are-there-any-applications-other-than-multiobjective-optimization"]], "Welcome to PyTorch-BSF!": [[1, "welcome-to-pytorch-bsf"]], "User guide": [[1, null]], "API reference": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "torch_bsf": [[2, "torch-bsf"]], "Quickstart": [[3, "quickstart"]], "Run as an MLflow project": [[3, "run-as-an-mlflow-project"]], "Installation": [[3, "installation"]], "Training": [[3, "training"]], "Prediction": [[3, "prediction"]], "Serve prediction API": [[3, "serve-prediction-api"]], "Run as a Python package": [[3, "run-as-a-python-package"]], "Run as Python code": [[3, "run-as-python-code"]], "torch_bsf package": [[4, "torch-bsf-package"]], "Submodules": [[4, "submodules"]], "torch_bsf.bezier_simplex module": [[4, "module-torch_bsf.bezier_simplex"]], "Module contents": [[4, "module-torch_bsf"]], "What is Bezier simplex fitting?": [[5, "what-is-bezier-simplex-fitting"]], "Bezier simplex": [[5, "bezier-simplex"]], "Fitting a Bezier simplex to a dataset": [[5, "fitting-a-bezier-simplex-to-a-dataset"]], "Why does Bezier simplex fitting matter?": [[5, "why-does-bezier-simplex-fitting-matter"]], "Approximation theorem": [[5, "approximation-theorem"]], "Weakly simplicial problems": [[5, "weakly-simplicial-problems"]], "Application 1: Elastic net": [[5, "application-1-elastic-net"]], "Strongly convex problems": [[5, "strongly-convex-problems"]], "Weighted-sum scalarization and solution map": [[5, "weighted-sum-scalarization-and-solution-map"]], "Application 2: Deep neural networks": [[5, "application-2-deep-neural-networks"]], "Statistical test for weakly simpliciality": [[5, "statistical-test-for-weakly-simpliciality"]], "References": [[5, "references"]]}, "indexentries": {"beziersimplex (class in torch_bsf)": [[4, "torch_bsf.BezierSimplex"]], "beziersimplex (class in torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.BezierSimplex"]], "beziersimplexdatamodule (class in torch_bsf)": [[4, "torch_bsf.BezierSimplexDataModule"]], "beziersimplexdatamodule (class in torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.BezierSimplexDataModule"]], "configure_optimizers() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.configure_optimizers"]], "configure_optimizers() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.configure_optimizers"]], "degree (torch_bsf.beziersimplex property)": [[4, "torch_bsf.BezierSimplex.degree"]], "degree (torch_bsf.bezier_simplex.beziersimplex property)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.degree"]], "fit() (in module torch_bsf)": [[4, "torch_bsf.fit"]], "fit() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.fit"]], "forward() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.forward"]], "forward() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.forward"]], "load() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.load"]], "meshgrid() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.meshgrid"]], "meshgrid() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.meshgrid"]], "module": [[4, "module-torch_bsf"], [4, "module-torch_bsf.bezier_simplex"]], "monomial() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.monomial"]], "n_params (torch_bsf.beziersimplex property)": [[4, "torch_bsf.BezierSimplex.n_params"]], "n_params (torch_bsf.bezier_simplex.beziersimplex property)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.n_params"]], "n_values (torch_bsf.beziersimplex property)": [[4, "torch_bsf.BezierSimplex.n_values"]], "n_values (torch_bsf.bezier_simplex.beziersimplex property)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.n_values"]], "polynom() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.polynom"]], "rand() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.rand"]], "randn() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.randn"]], "save() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.save"]], "setup() (torch_bsf.beziersimplexdatamodule method)": [[4, "torch_bsf.BezierSimplexDataModule.setup"]], "setup() (torch_bsf.bezier_simplex.beziersimplexdatamodule method)": [[4, "torch_bsf.bezier_simplex.BezierSimplexDataModule.setup"]], "test_dataloader() (torch_bsf.beziersimplexdatamodule method)": [[4, "torch_bsf.BezierSimplexDataModule.test_dataloader"]], "test_dataloader() (torch_bsf.bezier_simplex.beziersimplexdatamodule method)": [[4, "torch_bsf.bezier_simplex.BezierSimplexDataModule.test_dataloader"]], "test_step() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.test_step"]], "test_step() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.test_step"]], "torch_bsf": [[4, "module-torch_bsf"]], "torch_bsf.bezier_simplex": [[4, "module-torch_bsf.bezier_simplex"]], "train_dataloader() (torch_bsf.beziersimplexdatamodule method)": [[4, "torch_bsf.BezierSimplexDataModule.train_dataloader"]], "train_dataloader() (torch_bsf.bezier_simplex.beziersimplexdatamodule method)": [[4, "torch_bsf.bezier_simplex.BezierSimplexDataModule.train_dataloader"]], "training_step() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.training_step"]], "training_step() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.training_step"]], "val_dataloader() (torch_bsf.beziersimplexdatamodule method)": [[4, "torch_bsf.BezierSimplexDataModule.val_dataloader"]], "val_dataloader() (torch_bsf.bezier_simplex.beziersimplexdatamodule method)": [[4, "torch_bsf.bezier_simplex.BezierSimplexDataModule.val_dataloader"]], "validate_control_points() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.validate_control_points"]], "validation_end() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.validation_end"]], "validation_end() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.validation_end"]], "validation_step() (torch_bsf.beziersimplex method)": [[4, "torch_bsf.BezierSimplex.validation_step"]], "validation_step() (torch_bsf.bezier_simplex.beziersimplex method)": [[4, "torch_bsf.bezier_simplex.BezierSimplex.validation_step"]], "zeros() (in module torch_bsf.bezier_simplex)": [[4, "torch_bsf.bezier_simplex.zeros"]]}})